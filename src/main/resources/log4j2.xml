<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd">
<!-- status=debug 可以查看log4j的装配过程 -->
<configuration status="off">
    <!-- 文件路径 -->
    <properties>
        <!--设置日志在硬盘上输出的目录${log4j:configParentLocation}使用此查找将日志文件放在相对于log4j配置文件的目录中-->
        <!-- <property name="Log_Home">${web:rootDir}/parking_logs</property> -->
        <property name="Log_Home">D:/hqtzytb_logs</property>
        <Property name="patternLayout">[%d{yyyy-MM-dd HH:mm:ss,SSS} %-10r %-5p  %class{36}.%M @%L %m]%n</Property>   
    </properties>
    
    <!--先定义所有的appender-->
    <appenders>
        <!--输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
           <PatternLayout pattern="${patternLayout}"/>
        </Console>
        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${Log_Home}/info/info.${date:yyyy-MM-dd}.log" immediateFlush="true" filePattern="${Log_Home}/info/$${date:yyyy-MM}/info-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="${patternLayout}"/>
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </filters>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
        </RollingFile>
        <!--   这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingFileDebug" fileName="${Log_Home}/debug/debug.${date:yyyy-MM-dd}.log" immediateFlush="true" filePattern="${Log_Home}/debug/$${date:yyyy-MM}/debug-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="${patternLayout}"/>
            <filters>
                <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="NEUTRAL"/>
            </filters>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
        </RollingFile>
        <!-- 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingFileError" fileName="${Log_Home}/error/error.${date:yyyy-MM-dd}.log" immediateFlush="true" filePattern="${Log_Home}/error/$${date:yyyy-MM}/error-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="${patternLayout}"/>
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
        </RollingFile>
    </appenders>
    <!--trace<debug<info<warn<error<fatal-->
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
    <!--log4j的additivity属性： additivity它是 子Logger 是否继承 父Logger 的 输出源（appender） 的标志位。
          具体说，默认情况下子Logger会继承父Logger的appender，也就是说子Logger会在父Logger的appender里输出。
          若是additivity设为false，则子Logger只会在自己的appender里输出，而不会在父Logger的appender里输出。！-->
    <!--<logger name="org" level="INFO" additivity="false" ></logger>-->
    <!--<logger name="org.springframework" level="INFO" additivity="false"></logger>-->
    <!--<logger name="org.mybatis" level="INFO" additivity="false"></logger>-->
    <loggers>
        <logger name="org.springframework.core" level="info">
        </logger>
        <logger name="org.springframework.beans" level="info">
        </logger>
        <logger name="org.springframework.context" level="info">
        </logger>
        <logger name="org.springframework.web" level="info">
        </logger>
        <!--建立一个默认的root的logger-->
        <root level="info">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileDebug"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>
</configuration>
